//
// Generated by Bluespec Compiler, version 2021.07 (build 4cac6eba)
//
// On Wed May  1 11:56:12 IST 2024
//
//
// Ports:
// Name                         I/O  size props
// RDY_request_put                O     1 reg
// response_get                   O   512 reg
// RDY_response_get               O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// request_put                    I   512 reg
// EN_request_put                 I     1
// EN_response_get                I     1 unused
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkFFT(CLK,
	     RST_N,

	     request_put,
	     EN_request_put,
	     RDY_request_put,

	     EN_response_get,
	     response_get,
	     RDY_response_get);
  input  CLK;
  input  RST_N;

  // action method request_put
  input  [511 : 0] request_put;
  input  EN_request_put;
  output RDY_request_put;

  // actionvalue method response_get
  input  EN_response_get;
  output [511 : 0] response_get;
  output RDY_response_get;

  // signals for module outputs
  wire [511 : 0] response_get;
  wire RDY_request_put, RDY_response_get;

  // register fft_inputREG
  reg [511 : 0] fft_inputREG;
  wire [511 : 0] fft_inputREG_D_IN;
  wire fft_inputREG_EN;

  // register fft_isb1
  reg [511 : 0] fft_isb1;
  wire [511 : 0] fft_isb1_D_IN;
  wire fft_isb1_EN;

  // register fft_isb2
  reg [511 : 0] fft_isb2;
  wire [511 : 0] fft_isb2_D_IN;
  wire fft_isb2_EN;

  // register fft_outputREG
  reg [511 : 0] fft_outputREG;
  wire [511 : 0] fft_outputREG_D_IN;
  wire fft_outputREG_EN;

  // ports of submodule fft_inputREG_double_write_error
  wire fft_inputREG_double_write_error_D_IN,
       fft_inputREG_double_write_error_EN,
       fft_inputREG_double_write_error_Q_OUT;

  // ports of submodule fft_isb1_double_write_error
  wire fft_isb1_double_write_error_D_IN,
       fft_isb1_double_write_error_EN,
       fft_isb1_double_write_error_Q_OUT;

  // ports of submodule fft_isb2_double_write_error
  wire fft_isb2_double_write_error_D_IN,
       fft_isb2_double_write_error_EN,
       fft_isb2_double_write_error_Q_OUT;

  // ports of submodule fft_outputREG_double_write_error
  wire fft_outputREG_double_write_error_D_IN,
       fft_outputREG_double_write_error_EN,
       fft_outputREG_double_write_error_Q_OUT;

  // rule scheduling signals
  wire CAN_FIRE_RL_fft_stage1,
       CAN_FIRE_RL_fft_stage2,
       CAN_FIRE_RL_fft_stage3,
       CAN_FIRE_request_put,
       CAN_FIRE_response_get,
       WILL_FIRE_RL_fft_stage1,
       WILL_FIRE_RL_fft_stage2,
       WILL_FIRE_RL_fft_stage3,
       WILL_FIRE_request_put,
       WILL_FIRE_response_get;

  // remaining internal signals
  wire [63 : 0] IF_fft_isb2_94_BIT_223_03_THEN_NEG_fft_isb2_94_ETC___d907,
		IF_fft_isb2_94_BIT_223_03_THEN_NEG_fft_isb2_94_ETC___d980,
		IF_fft_isb2_94_BIT_255_64_THEN_NEG_fft_isb2_94_ETC___d868,
		IF_fft_isb2_94_BIT_255_64_THEN_NEG_fft_isb2_94_ETC___d945,
		IF_fft_isb2_94_BIT_479_35_THEN_NEG_fft_isb2_94_ETC___d739,
		IF_fft_isb2_94_BIT_511_96_THEN_NEG_fft_isb2_94_ETC___d700,
		_0_CONCAT_IF_fft_inputREG_BIT_127_52_THEN_NEG_f_ETC___d256,
		_0_CONCAT_IF_fft_inputREG_BIT_223_10_THEN_NEG_f_ETC___d214,
		_0_CONCAT_IF_fft_inputREG_BIT_255_69_THEN_NEG_f_ETC___d173,
		_0_CONCAT_IF_fft_inputREG_BIT_351_27_THEN_NEG_f_ETC___d131,
		_0_CONCAT_IF_fft_inputREG_BIT_383_6_THEN_NEG_ff_ETC___d90,
		_0_CONCAT_IF_fft_inputREG_BIT_479_5_THEN_NEG_ff_ETC___d49,
		_0_CONCAT_IF_fft_inputREG_BIT_511_THEN_NEG_fft__ETC___d8,
		_0_CONCAT_IF_fft_inputREG_BIT_95_93_THEN_NEG_ff_ETC___d297,
		_0_CONCAT_IF_fft_isb1_47_BIT_127_99_THEN_NEG_ff_ETC___d603,
		_0_CONCAT_IF_fft_isb1_47_BIT_223_57_THEN_NEG_ff_ETC___d561,
		_0_CONCAT_IF_fft_isb1_47_BIT_255_16_THEN_NEG_ff_ETC___d520,
		_0_CONCAT_IF_fft_isb1_47_BIT_351_32_THEN_NEG_ff_ETC___d436,
		_0_CONCAT_IF_fft_isb1_47_BIT_383_74_THEN_NEG_ff_ETC___d478,
		_0_CONCAT_IF_fft_isb1_47_BIT_479_49_THEN_NEG_ff_ETC___d353,
		_0_CONCAT_IF_fft_isb1_47_BIT_511_91_THEN_NEG_ff_ETC___d395,
		_0_CONCAT_IF_fft_isb1_47_BIT_95_40_THEN_NEG_fft_ETC___d644,
		_0_CONCAT_IF_fft_isb2_94_BIT_127_019_THEN_NEG_f_ETC___d1023,
		_0_CONCAT_IF_fft_isb2_94_BIT_351_80_THEN_NEG_ff_ETC___d784,
		_0_CONCAT_IF_fft_isb2_94_BIT_383_22_THEN_NEG_ff_ETC___d826,
		_0_CONCAT_IF_fft_isb2_94_BIT_95_060_THEN_NEG_ff_ETC___d1064,
		x__h110304,
		x__h113805,
		x__h122794,
		x__h126295,
		x__h141220,
		x__h153705,
		x__h16340,
		x__h182147,
		x__h194408,
		x__h211186,
		x__h214686,
		x__h224636,
		x__h228137,
		x__h238087,
		x__h241587,
		x__h244988,
		x__h257471,
		x__h287836,
		x__h28825,
		x__h302019,
		x__h41310,
		x__h53795,
		x__h57709,
		x__h69970,
		x__h82231,
		x__h94492;
  wire [47 : 0] IF_fft_inputREG_BIT_127_52_THEN_NEG_0_CONCAT_I_ETC___d270,
		IF_fft_inputREG_BIT_223_10_THEN_NEG_0_CONCAT_I_ETC___d228,
		IF_fft_inputREG_BIT_255_69_THEN_NEG_0_CONCAT_I_ETC___d187,
		IF_fft_inputREG_BIT_351_27_THEN_NEG_0_CONCAT_I_ETC___d145,
		IF_fft_inputREG_BIT_383_6_THEN_NEG_0_CONCAT_IF_ETC___d104,
		IF_fft_inputREG_BIT_479_5_THEN_NEG_0_CONCAT_IF_ETC___d63,
		IF_fft_inputREG_BIT_511_THEN_NEG_0_CONCAT_IF_f_ETC___d22,
		IF_fft_inputREG_BIT_95_93_THEN_NEG_0_CONCAT_IF_ETC___d311,
		IF_fft_isb1_47_BIT_127_99_THEN_NEG_0_CONCAT_IF_ETC___d617,
		IF_fft_isb1_47_BIT_223_57_THEN_NEG_0_CONCAT_IF_ETC___d575,
		IF_fft_isb1_47_BIT_255_16_THEN_NEG_0_CONCAT_IF_ETC___d534,
		IF_fft_isb1_47_BIT_351_32_THEN_0_CONCAT_IF_fft_ETC___d450,
		IF_fft_isb1_47_BIT_383_74_THEN_0_CONCAT_IF_fft_ETC___d492,
		IF_fft_isb1_47_BIT_479_49_THEN_0_CONCAT_IF_fft_ETC___d367,
		IF_fft_isb1_47_BIT_511_91_THEN_0_CONCAT_IF_fft_ETC___d409,
		IF_fft_isb1_47_BIT_95_40_THEN_NEG_0_CONCAT_IF__ETC___d658,
		IF_fft_isb2_94_BIT_127_019_THEN_NEG_0_CONCAT_I_ETC___d1037,
		IF_fft_isb2_94_BIT_223_03_THEN_IF_fft_isb2_94__ETC___d921,
		IF_fft_isb2_94_BIT_223_03_THEN_NEG_IF_fft_isb2_ETC___d994,
		IF_fft_isb2_94_BIT_255_64_THEN_IF_fft_isb2_94__ETC___d959,
		IF_fft_isb2_94_BIT_255_64_THEN_NEG_IF_fft_isb2_ETC___d882,
		IF_fft_isb2_94_BIT_351_80_THEN_0_CONCAT_IF_fft_ETC___d798,
		IF_fft_isb2_94_BIT_383_22_THEN_0_CONCAT_IF_fft_ETC___d840,
		IF_fft_isb2_94_BIT_479_35_THEN_IF_fft_isb2_94__ETC___d753,
		IF_fft_isb2_94_BIT_511_96_THEN_IF_fft_isb2_94__ETC___d714,
		IF_fft_isb2_94_BIT_95_060_THEN_NEG_0_CONCAT_IF_ETC___d1078,
		x__h109891,
		x__h113392,
		x__h122381,
		x__h125882,
		x__h140807,
		x__h153292,
		x__h15927,
		x__h181734,
		x__h193995,
		x__h210773,
		x__h214273,
		x__h224223,
		x__h227724,
		x__h237674,
		x__h241174,
		x__h244575,
		x__h257058,
		x__h28412,
		x__h287423,
		x__h301606,
		x__h40897,
		x__h53382,
		x__h57296,
		x__h69557,
		x__h81818,
		x__h94079;
  wire [31 : 0] IF_NOT_IF_NOT_IF_fft_isb2_94_BIT_479_35_THEN_I_ETC___d773,
		IF_NOT_IF_NOT_IF_fft_isb2_94_BIT_511_96_THEN_I_ETC___d734,
		x__h106415,
		x__h112959,
		x__h112978,
		x__h119203,
		x__h125449,
		x__h125468,
		x__h13056,
		x__h13075,
		x__h131693,
		x__h137936,
		x__h137955,
		x__h144178,
		x__h150421,
		x__h150440,
		x__h156658,
		x__h156792,
		x__h162689,
		x__h168922,
		x__h169056,
		x__h174953,
		x__h181186,
		x__h181320,
		x__h187216,
		x__h19298,
		x__h193447,
		x__h193581,
		x__h199477,
		x__h206330,
		x__h211292,
		x__h213840,
		x__h213859,
		x__h214725,
		x__h221045,
		x__h227291,
		x__h227310,
		x__h233535,
		x__h238193,
		x__h240741,
		x__h240760,
		x__h241626,
		x__h247944,
		x__h254187,
		x__h254206,
		x__h25541,
		x__h25560,
		x__h260424,
		x__h260558,
		x__h267417,
		x__h274611,
		x__h274745,
		x__h280642,
		x__h286875,
		x__h287009,
		x__h293866,
		x__h301058,
		x__h301192,
		x__h307088,
		x__h31783,
		x__h38026,
		x__h38045,
		x__h44268,
		x__h50511,
		x__h50530,
		x__h56748,
		x__h56882,
		x__h5878,
		x__h62778,
		x__h69009,
		x__h69143,
		x__h75039,
		x__h81270,
		x__h81404,
		x__h87300,
		x__h93531,
		x__h93665,
		x__h99561;
  wire [15 : 0] y_f__h111478,
		y_f__h114912,
		y_f__h123968,
		y_f__h127402,
		y_f__h142325,
		y_f__h154810,
		y_f__h17445,
		y_f__h183296,
		y_f__h195557,
		y_f__h212359,
		y_f__h215792,
		y_f__h225810,
		y_f__h229244,
		y_f__h239260,
		y_f__h242693,
		y_f__h246092,
		y_f__h258576,
		y_f__h288984,
		y_f__h29930,
		y_f__h303168,
		y_f__h42415,
		y_f__h54900,
		y_f__h58858,
		y_f__h71119,
		y_f__h83380,
		y_f__h95641;

  // action method request_put
  assign RDY_request_put = fft_inputREG_double_write_error_Q_OUT ;
  assign CAN_FIRE_request_put = fft_inputREG_double_write_error_Q_OUT ;
  assign WILL_FIRE_request_put = EN_request_put ;

  // actionvalue method response_get
  assign response_get = fft_outputREG ;
  assign RDY_response_get = 1'd1 ;
  assign CAN_FIRE_response_get = 1'd1 ;
  assign WILL_FIRE_response_get = EN_response_get ;

  // submodule fft_inputREG_double_write_error
  RevertReg #(.width(32'd1),
	      .init(1'd1)) fft_inputREG_double_write_error(.CLK(CLK),
							   .D_IN(fft_inputREG_double_write_error_D_IN),
							   .EN(fft_inputREG_double_write_error_EN),
							   .Q_OUT(fft_inputREG_double_write_error_Q_OUT));

  // submodule fft_isb1_double_write_error
  RevertReg #(.width(32'd1),
	      .init(1'd1)) fft_isb1_double_write_error(.CLK(CLK),
						       .D_IN(fft_isb1_double_write_error_D_IN),
						       .EN(fft_isb1_double_write_error_EN),
						       .Q_OUT(fft_isb1_double_write_error_Q_OUT));

  // submodule fft_isb2_double_write_error
  RevertReg #(.width(32'd1),
	      .init(1'd1)) fft_isb2_double_write_error(.CLK(CLK),
						       .D_IN(fft_isb2_double_write_error_D_IN),
						       .EN(fft_isb2_double_write_error_EN),
						       .Q_OUT(fft_isb2_double_write_error_Q_OUT));

  // submodule fft_outputREG_double_write_error
  RevertReg #(.width(32'd1),
	      .init(1'd1)) fft_outputREG_double_write_error(.CLK(CLK),
							    .D_IN(fft_outputREG_double_write_error_D_IN),
							    .EN(fft_outputREG_double_write_error_EN),
							    .Q_OUT(fft_outputREG_double_write_error_Q_OUT));

  // rule RL_fft_stage3
  assign CAN_FIRE_RL_fft_stage3 = fft_outputREG_double_write_error_Q_OUT ;
  assign WILL_FIRE_RL_fft_stage3 = fft_outputREG_double_write_error_Q_OUT ;

  // rule RL_fft_stage2
  assign CAN_FIRE_RL_fft_stage2 = fft_isb2_double_write_error_Q_OUT ;
  assign WILL_FIRE_RL_fft_stage2 = fft_isb2_double_write_error_Q_OUT ;

  // rule RL_fft_stage1
  assign CAN_FIRE_RL_fft_stage1 = fft_isb1_double_write_error_Q_OUT ;
  assign WILL_FIRE_RL_fft_stage1 = fft_isb1_double_write_error_Q_OUT ;

  // register fft_inputREG
  assign fft_inputREG_D_IN =
	     { request_put[511:448],
	       request_put[255:192],
	       request_put[383:320],
	       request_put[127:64],
	       request_put[447:384],
	       request_put[191:128],
	       request_put[319:256],
	       request_put[63:0] } ;
  assign fft_inputREG_EN = EN_request_put ;

  // register fft_isb1
  assign fft_isb1_D_IN =
	     { x__h5878,
	       x__h13056,
	       x__h19298,
	       x__h25541,
	       x__h31783,
	       x__h38026,
	       x__h44268,
	       x__h50511,
	       x__h56748,
	       x__h62778,
	       x__h69009,
	       x__h75039,
	       x__h81270,
	       x__h87300,
	       x__h93531,
	       x__h99561 } ;
  assign fft_isb1_EN = fft_isb1_double_write_error_Q_OUT ;

  // register fft_isb2
  assign fft_isb2_D_IN =
	     { x__h106415,
	       x__h112959,
	       x__h119203,
	       x__h125449,
	       x__h131693,
	       x__h137936,
	       x__h144178,
	       x__h150421,
	       x__h156658,
	       x__h162689,
	       x__h168922,
	       x__h174953,
	       x__h181186,
	       x__h187216,
	       x__h193447,
	       x__h199477 } ;
  assign fft_isb2_EN = fft_isb2_double_write_error_Q_OUT ;

  // register fft_outputREG
  assign fft_outputREG_D_IN =
	     { x__h206330,
	       x__h213840,
	       x__h221045,
	       x__h227291,
	       x__h233535,
	       x__h240741,
	       x__h247944,
	       x__h254187,
	       x__h260424,
	       x__h267417,
	       x__h274611,
	       x__h280642,
	       x__h286875,
	       x__h293866,
	       x__h301058,
	       x__h307088 } ;
  assign fft_outputREG_EN = fft_outputREG_double_write_error_Q_OUT ;

  // submodule fft_inputREG_double_write_error
  assign fft_inputREG_double_write_error_D_IN = 1'd1 ;
  assign fft_inputREG_double_write_error_EN = EN_request_put ;

  // submodule fft_isb1_double_write_error
  assign fft_isb1_double_write_error_D_IN = 1'd1 ;
  assign fft_isb1_double_write_error_EN = fft_isb1_double_write_error_Q_OUT ;

  // submodule fft_isb2_double_write_error
  assign fft_isb2_double_write_error_D_IN = 1'd1 ;
  assign fft_isb2_double_write_error_EN = fft_isb2_double_write_error_Q_OUT ;

  // submodule fft_outputREG_double_write_error
  assign fft_outputREG_double_write_error_D_IN = 1'd1 ;
  assign fft_outputREG_double_write_error_EN =
	     fft_outputREG_double_write_error_Q_OUT ;

  // remaining internal signals
  assign IF_NOT_IF_NOT_IF_fft_isb2_94_BIT_479_35_THEN_I_ETC___d773 =
	     (!x__h210773[47] &&
	      (x__h210773[31] || x__h210773[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h210773[47] &&
		 (!x__h210773[31] || ~x__h210773[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h210773[31:0]) ;
  assign IF_NOT_IF_NOT_IF_fft_isb2_94_BIT_511_96_THEN_I_ETC___d734 =
	     (!x__h214273[47] &&
	      (x__h214273[31] || x__h214273[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h214273[47] &&
		 (!x__h214273[31] || ~x__h214273[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h214273[31:0]) ;
  assign IF_fft_inputREG_BIT_127_52_THEN_NEG_0_CONCAT_I_ETC___d270 =
	     x__h94492[63:16] + { 32'd0, y_f__h95641 } ;
  assign IF_fft_inputREG_BIT_223_10_THEN_NEG_0_CONCAT_I_ETC___d228 =
	     x__h41310[63:16] + { 32'd0, y_f__h42415 } ;
  assign IF_fft_inputREG_BIT_255_69_THEN_NEG_0_CONCAT_I_ETC___d187 =
	     x__h82231[63:16] + { 32'd0, y_f__h83380 } ;
  assign IF_fft_inputREG_BIT_351_27_THEN_NEG_0_CONCAT_I_ETC___d145 =
	     x__h28825[63:16] + { 32'd0, y_f__h29930 } ;
  assign IF_fft_inputREG_BIT_383_6_THEN_NEG_0_CONCAT_IF_ETC___d104 =
	     x__h69970[63:16] + { 32'd0, y_f__h71119 } ;
  assign IF_fft_inputREG_BIT_479_5_THEN_NEG_0_CONCAT_IF_ETC___d63 =
	     x__h16340[63:16] + { 32'd0, y_f__h17445 } ;
  assign IF_fft_inputREG_BIT_511_THEN_NEG_0_CONCAT_IF_f_ETC___d22 =
	     x__h57709[63:16] + { 32'd0, y_f__h58858 } ;
  assign IF_fft_inputREG_BIT_95_93_THEN_NEG_0_CONCAT_IF_ETC___d311 =
	     x__h53795[63:16] + { 32'd0, y_f__h54900 } ;
  assign IF_fft_isb1_47_BIT_127_99_THEN_NEG_0_CONCAT_IF_ETC___d617 =
	     x__h194408[63:16] + { 32'd0, y_f__h195557 } ;
  assign IF_fft_isb1_47_BIT_223_57_THEN_NEG_0_CONCAT_IF_ETC___d575 =
	     x__h141220[63:16] + { 32'd0, y_f__h142325 } ;
  assign IF_fft_isb1_47_BIT_255_16_THEN_NEG_0_CONCAT_IF_ETC___d534 =
	     x__h182147[63:16] + { 32'd0, y_f__h183296 } ;
  assign IF_fft_isb1_47_BIT_351_32_THEN_0_CONCAT_IF_fft_ETC___d450 =
	     x__h122794[63:16] + { 32'd0, y_f__h123968 } ;
  assign IF_fft_isb1_47_BIT_383_74_THEN_0_CONCAT_IF_fft_ETC___d492 =
	     x__h126295[63:16] + { 32'd0, y_f__h127402 } ;
  assign IF_fft_isb1_47_BIT_479_49_THEN_0_CONCAT_IF_fft_ETC___d367 =
	     x__h110304[63:16] + { 32'd0, y_f__h111478 } ;
  assign IF_fft_isb1_47_BIT_511_91_THEN_0_CONCAT_IF_fft_ETC___d409 =
	     x__h113805[63:16] + { 32'd0, y_f__h114912 } ;
  assign IF_fft_isb1_47_BIT_95_40_THEN_NEG_0_CONCAT_IF__ETC___d658 =
	     x__h153705[63:16] + { 32'd0, y_f__h154810 } ;
  assign IF_fft_isb2_94_BIT_127_019_THEN_NEG_0_CONCAT_I_ETC___d1037 =
	     x__h302019[63:16] + { 32'd0, y_f__h303168 } ;
  assign IF_fft_isb2_94_BIT_223_03_THEN_IF_fft_isb2_94__ETC___d921 =
	     x__h238087[63:16] + { 32'd0, y_f__h239260 } ;
  assign IF_fft_isb2_94_BIT_223_03_THEN_NEG_IF_fft_isb2_ETC___d994 =
	     x__h244988[63:16] + { 32'd0, y_f__h246092 } ;
  assign IF_fft_isb2_94_BIT_223_03_THEN_NEG_fft_isb2_94_ETC___d907 =
	     x__h238193 * 32'd46341 ;
  assign IF_fft_isb2_94_BIT_223_03_THEN_NEG_fft_isb2_94_ETC___d980 =
	     x__h238193 * 32'd46340 ;
  assign IF_fft_isb2_94_BIT_255_64_THEN_IF_fft_isb2_94__ETC___d959 =
	     x__h241587[63:16] + { 32'd0, y_f__h242693 } ;
  assign IF_fft_isb2_94_BIT_255_64_THEN_NEG_IF_fft_isb2_ETC___d882 =
	     x__h287836[63:16] + { 32'd0, y_f__h288984 } ;
  assign IF_fft_isb2_94_BIT_255_64_THEN_NEG_fft_isb2_94_ETC___d868 =
	     x__h241626 * 32'd46340 ;
  assign IF_fft_isb2_94_BIT_255_64_THEN_NEG_fft_isb2_94_ETC___d945 =
	     x__h241626 * 32'd46341 ;
  assign IF_fft_isb2_94_BIT_351_80_THEN_0_CONCAT_IF_fft_ETC___d798 =
	     x__h224636[63:16] + { 32'd0, y_f__h225810 } ;
  assign IF_fft_isb2_94_BIT_383_22_THEN_0_CONCAT_IF_fft_ETC___d840 =
	     x__h228137[63:16] + { 32'd0, y_f__h229244 } ;
  assign IF_fft_isb2_94_BIT_479_35_THEN_IF_fft_isb2_94__ETC___d753 =
	     x__h211186[63:16] + { 32'd0, y_f__h212359 } ;
  assign IF_fft_isb2_94_BIT_479_35_THEN_NEG_fft_isb2_94_ETC___d739 =
	     x__h211292 * 32'd46341 ;
  assign IF_fft_isb2_94_BIT_511_96_THEN_IF_fft_isb2_94__ETC___d714 =
	     x__h214686[63:16] + { 32'd0, y_f__h215792 } ;
  assign IF_fft_isb2_94_BIT_511_96_THEN_NEG_fft_isb2_94_ETC___d700 =
	     x__h214725 * 32'd46341 ;
  assign IF_fft_isb2_94_BIT_95_060_THEN_NEG_0_CONCAT_IF_ETC___d1078 =
	     x__h257471[63:16] + { 32'd0, y_f__h258576 } ;
  assign _0_CONCAT_IF_fft_inputREG_BIT_127_52_THEN_NEG_f_ETC___d256 =
	     { 16'd0,
	       fft_inputREG[127] ?
		 -fft_inputREG[127:96] :
		 fft_inputREG[127:96],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_inputREG_BIT_223_10_THEN_NEG_f_ETC___d214 =
	     { 16'd0,
	       fft_inputREG[223] ?
		 -fft_inputREG[223:192] :
		 fft_inputREG[223:192],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_inputREG_BIT_255_69_THEN_NEG_f_ETC___d173 =
	     { 16'd0,
	       fft_inputREG[255] ?
		 -fft_inputREG[255:224] :
		 fft_inputREG[255:224],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_inputREG_BIT_351_27_THEN_NEG_f_ETC___d131 =
	     { 16'd0,
	       fft_inputREG[351] ?
		 -fft_inputREG[351:320] :
		 fft_inputREG[351:320],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_inputREG_BIT_383_6_THEN_NEG_ff_ETC___d90 =
	     { 16'd0,
	       fft_inputREG[383] ?
		 -fft_inputREG[383:352] :
		 fft_inputREG[383:352],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_inputREG_BIT_479_5_THEN_NEG_ff_ETC___d49 =
	     { 16'd0,
	       fft_inputREG[479] ?
		 -fft_inputREG[479:448] :
		 fft_inputREG[479:448],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_inputREG_BIT_511_THEN_NEG_fft__ETC___d8 =
	     { 16'd0,
	       fft_inputREG[511] ?
		 -fft_inputREG[511:480] :
		 fft_inputREG[511:480],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_inputREG_BIT_95_93_THEN_NEG_ff_ETC___d297 =
	     { 16'd0,
	       fft_inputREG[95] ? -fft_inputREG[95:64] : fft_inputREG[95:64],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_isb1_47_BIT_127_99_THEN_NEG_ff_ETC___d603 =
	     { 16'd0,
	       fft_isb1[127] ? -fft_isb1[127:96] : fft_isb1[127:96],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_isb1_47_BIT_223_57_THEN_NEG_ff_ETC___d561 =
	     { 16'd0,
	       fft_isb1[223] ? -fft_isb1[223:192] : fft_isb1[223:192],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_isb1_47_BIT_255_16_THEN_NEG_ff_ETC___d520 =
	     { 16'd0,
	       fft_isb1[255] ? -fft_isb1[255:224] : fft_isb1[255:224],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_isb1_47_BIT_351_32_THEN_NEG_ff_ETC___d436 =
	     { 16'd0,
	       fft_isb1[351] ? -fft_isb1[351:320] : fft_isb1[351:320],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_isb1_47_BIT_383_74_THEN_NEG_ff_ETC___d478 =
	     { 16'd0,
	       fft_isb1[383] ? -fft_isb1[383:352] : fft_isb1[383:352],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_isb1_47_BIT_479_49_THEN_NEG_ff_ETC___d353 =
	     { 16'd0,
	       fft_isb1[479] ? -fft_isb1[479:448] : fft_isb1[479:448],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_isb1_47_BIT_511_91_THEN_NEG_ff_ETC___d395 =
	     { 16'd0,
	       fft_isb1[511] ? -fft_isb1[511:480] : fft_isb1[511:480],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_isb1_47_BIT_95_40_THEN_NEG_fft_ETC___d644 =
	     { 16'd0,
	       fft_isb1[95] ? -fft_isb1[95:64] : fft_isb1[95:64],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_isb2_94_BIT_127_019_THEN_NEG_f_ETC___d1023 =
	     { 16'd0,
	       fft_isb2[127] ? -fft_isb2[127:96] : fft_isb2[127:96],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_isb2_94_BIT_351_80_THEN_NEG_ff_ETC___d784 =
	     { 16'd0,
	       fft_isb2[351] ? -fft_isb2[351:320] : fft_isb2[351:320],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_isb2_94_BIT_383_22_THEN_NEG_ff_ETC___d826 =
	     { 16'd0,
	       fft_isb2[383] ? -fft_isb2[383:352] : fft_isb2[383:352],
	       16'd0 } ;
  assign _0_CONCAT_IF_fft_isb2_94_BIT_95_060_THEN_NEG_ff_ETC___d1064 =
	     { 16'd0,
	       fft_isb2[95] ? -fft_isb2[95:64] : fft_isb2[95:64],
	       16'd0 } ;
  assign x__h106415 = fft_isb1[447:416] - x__h156792 ;
  assign x__h109891 =
	     (!x__h110304[63] &&
	      IF_fft_isb1_47_BIT_479_49_THEN_0_CONCAT_IF_fft_ETC___d367[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_isb1_47_BIT_479_49_THEN_0_CONCAT_IF_fft_ETC___d367 ;
  assign x__h110304 =
	     fft_isb1[479] ?
	       _0_CONCAT_IF_fft_isb1_47_BIT_479_49_THEN_NEG_ff_ETC___d353 :
	       -_0_CONCAT_IF_fft_isb1_47_BIT_479_49_THEN_NEG_ff_ETC___d353 ;
  assign x__h112959 = fft_isb1[415:384] - x__h112978 ;
  assign x__h112978 =
	     (!x__h113392[47] &&
	      (x__h113392[31] || x__h113392[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h113392[47] &&
		 (!x__h113392[31] || ~x__h113392[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h113392[31:0]) ;
  assign x__h113392 =
	     (!x__h113805[63] &&
	      IF_fft_isb1_47_BIT_511_91_THEN_0_CONCAT_IF_fft_ETC___d409[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_isb1_47_BIT_511_91_THEN_0_CONCAT_IF_fft_ETC___d409 ;
  assign x__h113805 =
	     fft_isb1[511] ?
	       _0_CONCAT_IF_fft_isb1_47_BIT_511_91_THEN_NEG_ff_ETC___d395 :
	       -_0_CONCAT_IF_fft_isb1_47_BIT_511_91_THEN_NEG_ff_ETC___d395 ;
  assign x__h119203 = fft_isb1[319:288] - x__h169056 ;
  assign x__h122381 =
	     (!x__h122794[63] &&
	      IF_fft_isb1_47_BIT_351_32_THEN_0_CONCAT_IF_fft_ETC___d450[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_isb1_47_BIT_351_32_THEN_0_CONCAT_IF_fft_ETC___d450 ;
  assign x__h122794 =
	     fft_isb1[351] ?
	       _0_CONCAT_IF_fft_isb1_47_BIT_351_32_THEN_NEG_ff_ETC___d436 :
	       -_0_CONCAT_IF_fft_isb1_47_BIT_351_32_THEN_NEG_ff_ETC___d436 ;
  assign x__h125449 = fft_isb1[287:256] - x__h125468 ;
  assign x__h125468 =
	     (!x__h125882[47] &&
	      (x__h125882[31] || x__h125882[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h125882[47] &&
		 (!x__h125882[31] || ~x__h125882[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h125882[31:0]) ;
  assign x__h125882 =
	     (!x__h126295[63] &&
	      IF_fft_isb1_47_BIT_383_74_THEN_0_CONCAT_IF_fft_ETC___d492[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_isb1_47_BIT_383_74_THEN_0_CONCAT_IF_fft_ETC___d492 ;
  assign x__h126295 =
	     fft_isb1[383] ?
	       _0_CONCAT_IF_fft_isb1_47_BIT_383_74_THEN_NEG_ff_ETC___d478 :
	       -_0_CONCAT_IF_fft_isb1_47_BIT_383_74_THEN_NEG_ff_ETC___d478 ;
  assign x__h13056 = fft_inputREG[415:384] - x__h13075 ;
  assign x__h13075 =
	     (!x__h15927[47] &&
	      (x__h15927[31] || x__h15927[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h15927[47] &&
		 (!x__h15927[31] || ~x__h15927[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h15927[31:0]) ;
  assign x__h131693 = fft_isb1[191:160] - x__h181320 ;
  assign x__h137936 = fft_isb1[159:128] - x__h137955 ;
  assign x__h137955 =
	     (!x__h140807[47] &&
	      (x__h140807[31] || x__h140807[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h140807[47] &&
		 (!x__h140807[31] || ~x__h140807[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h140807[31:0]) ;
  assign x__h140807 =
	     (!x__h141220[63] &&
	      IF_fft_isb1_47_BIT_223_57_THEN_NEG_0_CONCAT_IF_ETC___d575[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_isb1_47_BIT_223_57_THEN_NEG_0_CONCAT_IF_ETC___d575 ;
  assign x__h141220 =
	     fft_isb1[223] ?
	       -_0_CONCAT_IF_fft_isb1_47_BIT_223_57_THEN_NEG_ff_ETC___d561 :
	       _0_CONCAT_IF_fft_isb1_47_BIT_223_57_THEN_NEG_ff_ETC___d561 ;
  assign x__h144178 = fft_isb1[63:32] - x__h193581 ;
  assign x__h150421 = fft_isb1[31:0] - x__h150440 ;
  assign x__h150440 =
	     (!x__h153292[47] &&
	      (x__h153292[31] || x__h153292[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h153292[47] &&
		 (!x__h153292[31] || ~x__h153292[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h153292[31:0]) ;
  assign x__h153292 =
	     (!x__h153705[63] &&
	      IF_fft_isb1_47_BIT_95_40_THEN_NEG_0_CONCAT_IF__ETC___d658[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_isb1_47_BIT_95_40_THEN_NEG_0_CONCAT_IF__ETC___d658 ;
  assign x__h153705 =
	     fft_isb1[95] ?
	       -_0_CONCAT_IF_fft_isb1_47_BIT_95_40_THEN_NEG_fft_ETC___d644 :
	       _0_CONCAT_IF_fft_isb1_47_BIT_95_40_THEN_NEG_fft_ETC___d644 ;
  assign x__h156658 = fft_isb1[447:416] + x__h156792 ;
  assign x__h156792 =
	     32'd0 -
	     ((!x__h109891[47] &&
	       (x__h109891[31] || x__h109891[47:32] != 16'd0)) ?
		32'h7FFFFFFF :
		((x__h109891[47] &&
		  (!x__h109891[31] || ~x__h109891[47:32] != 16'd0)) ?
		   32'h80000000 :
		   x__h109891[31:0])) ;
  assign x__h15927 =
	     (!x__h16340[63] &&
	      IF_fft_inputREG_BIT_479_5_THEN_NEG_0_CONCAT_IF_ETC___d63[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_inputREG_BIT_479_5_THEN_NEG_0_CONCAT_IF_ETC___d63 ;
  assign x__h162689 = fft_isb1[415:384] + x__h112978 ;
  assign x__h16340 =
	     fft_inputREG[479] ?
	       -_0_CONCAT_IF_fft_inputREG_BIT_479_5_THEN_NEG_ff_ETC___d49 :
	       _0_CONCAT_IF_fft_inputREG_BIT_479_5_THEN_NEG_ff_ETC___d49 ;
  assign x__h168922 = fft_isb1[319:288] + x__h169056 ;
  assign x__h169056 =
	     32'd0 -
	     ((!x__h122381[47] &&
	       (x__h122381[31] || x__h122381[47:32] != 16'd0)) ?
		32'h7FFFFFFF :
		((x__h122381[47] &&
		  (!x__h122381[31] || ~x__h122381[47:32] != 16'd0)) ?
		   32'h80000000 :
		   x__h122381[31:0])) ;
  assign x__h174953 = fft_isb1[287:256] + x__h125468 ;
  assign x__h181186 = fft_isb1[191:160] + x__h181320 ;
  assign x__h181320 =
	     (!x__h181734[47] &&
	      (x__h181734[31] || x__h181734[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h181734[47] &&
		 (!x__h181734[31] || ~x__h181734[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h181734[31:0]) ;
  assign x__h181734 =
	     (!x__h182147[63] &&
	      IF_fft_isb1_47_BIT_255_16_THEN_NEG_0_CONCAT_IF_ETC___d534[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_isb1_47_BIT_255_16_THEN_NEG_0_CONCAT_IF_ETC___d534 ;
  assign x__h182147 =
	     fft_isb1[255] ?
	       -_0_CONCAT_IF_fft_isb1_47_BIT_255_16_THEN_NEG_ff_ETC___d520 :
	       _0_CONCAT_IF_fft_isb1_47_BIT_255_16_THEN_NEG_ff_ETC___d520 ;
  assign x__h187216 = fft_isb1[159:128] + x__h137955 ;
  assign x__h19298 = fft_inputREG[319:288] - x__h69143 ;
  assign x__h193447 = fft_isb1[63:32] + x__h193581 ;
  assign x__h193581 =
	     (!x__h193995[47] &&
	      (x__h193995[31] || x__h193995[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h193995[47] &&
		 (!x__h193995[31] || ~x__h193995[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h193995[31:0]) ;
  assign x__h193995 =
	     (!x__h194408[63] &&
	      IF_fft_isb1_47_BIT_127_99_THEN_NEG_0_CONCAT_IF_ETC___d617[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_isb1_47_BIT_127_99_THEN_NEG_0_CONCAT_IF_ETC___d617 ;
  assign x__h194408 =
	     fft_isb1[127] ?
	       -_0_CONCAT_IF_fft_isb1_47_BIT_127_99_THEN_NEG_ff_ETC___d603 :
	       _0_CONCAT_IF_fft_isb1_47_BIT_127_99_THEN_NEG_ff_ETC___d603 ;
  assign x__h199477 = fft_isb1[31:0] + x__h150440 ;
  assign x__h206330 = fft_isb2[447:416] - x__h260558 ;
  assign x__h210773 =
	     (!x__h211186[63] &&
	      IF_fft_isb2_94_BIT_479_35_THEN_IF_fft_isb2_94__ETC___d753[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_isb2_94_BIT_479_35_THEN_IF_fft_isb2_94__ETC___d753 ;
  assign x__h211186 =
	     fft_isb2[479] ?
	       IF_fft_isb2_94_BIT_479_35_THEN_NEG_fft_isb2_94_ETC___d739 :
	       -IF_fft_isb2_94_BIT_479_35_THEN_NEG_fft_isb2_94_ETC___d739 ;
  assign x__h211292 = fft_isb2[479] ? -fft_isb2[479:448] : fft_isb2[479:448] ;
  assign x__h213840 = fft_isb2[415:384] - x__h213859 ;
  assign x__h213859 =
	     IF_NOT_IF_NOT_IF_fft_isb2_94_BIT_511_96_THEN_I_ETC___d734 +
	     IF_NOT_IF_NOT_IF_fft_isb2_94_BIT_479_35_THEN_I_ETC___d773 ;
  assign x__h214273 =
	     (!x__h214686[63] &&
	      IF_fft_isb2_94_BIT_511_96_THEN_IF_fft_isb2_94__ETC___d714[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_isb2_94_BIT_511_96_THEN_IF_fft_isb2_94__ETC___d714 ;
  assign x__h214686 =
	     fft_isb2[511] ?
	       IF_fft_isb2_94_BIT_511_96_THEN_NEG_fft_isb2_94_ETC___d700 :
	       -IF_fft_isb2_94_BIT_511_96_THEN_NEG_fft_isb2_94_ETC___d700 ;
  assign x__h214725 = fft_isb2[511] ? -fft_isb2[511:480] : fft_isb2[511:480] ;
  assign x__h221045 = fft_isb2[319:288] - x__h274745 ;
  assign x__h224223 =
	     (!x__h224636[63] &&
	      IF_fft_isb2_94_BIT_351_80_THEN_0_CONCAT_IF_fft_ETC___d798[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_isb2_94_BIT_351_80_THEN_0_CONCAT_IF_fft_ETC___d798 ;
  assign x__h224636 =
	     fft_isb2[351] ?
	       _0_CONCAT_IF_fft_isb2_94_BIT_351_80_THEN_NEG_ff_ETC___d784 :
	       -_0_CONCAT_IF_fft_isb2_94_BIT_351_80_THEN_NEG_ff_ETC___d784 ;
  assign x__h227291 = fft_isb2[287:256] - x__h227310 ;
  assign x__h227310 =
	     (!x__h227724[47] &&
	      (x__h227724[31] || x__h227724[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h227724[47] &&
		 (!x__h227724[31] || ~x__h227724[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h227724[31:0]) ;
  assign x__h227724 =
	     (!x__h228137[63] &&
	      IF_fft_isb2_94_BIT_383_22_THEN_0_CONCAT_IF_fft_ETC___d840[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_isb2_94_BIT_383_22_THEN_0_CONCAT_IF_fft_ETC___d840 ;
  assign x__h228137 =
	     fft_isb2[383] ?
	       _0_CONCAT_IF_fft_isb2_94_BIT_383_22_THEN_NEG_ff_ETC___d826 :
	       -_0_CONCAT_IF_fft_isb2_94_BIT_383_22_THEN_NEG_ff_ETC___d826 ;
  assign x__h233535 = fft_isb2[191:160] - x__h287009 ;
  assign x__h237674 =
	     (!x__h238087[63] &&
	      IF_fft_isb2_94_BIT_223_03_THEN_IF_fft_isb2_94__ETC___d921[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_isb2_94_BIT_223_03_THEN_IF_fft_isb2_94__ETC___d921 ;
  assign x__h238087 =
	     fft_isb2[223] ?
	       IF_fft_isb2_94_BIT_223_03_THEN_NEG_fft_isb2_94_ETC___d907 :
	       -IF_fft_isb2_94_BIT_223_03_THEN_NEG_fft_isb2_94_ETC___d907 ;
  assign x__h238193 = fft_isb2[223] ? -fft_isb2[223:192] : fft_isb2[223:192] ;
  assign x__h240741 = fft_isb2[159:128] - x__h240760 ;
  assign x__h240760 =
	     ((!x__h241174[47] &&
	       (x__h241174[31] || x__h241174[47:32] != 16'd0)) ?
		32'h7FFFFFFF :
		((x__h241174[47] &&
		  (!x__h241174[31] || ~x__h241174[47:32] != 16'd0)) ?
		   32'h80000000 :
		   x__h241174[31:0])) +
	     ((!x__h244575[47] &&
	       (x__h244575[31] || x__h244575[47:32] != 16'd0)) ?
		32'h7FFFFFFF :
		((x__h244575[47] &&
		  (!x__h244575[31] || ~x__h244575[47:32] != 16'd0)) ?
		   32'h80000000 :
		   x__h244575[31:0])) ;
  assign x__h241174 =
	     (!x__h241587[63] &&
	      IF_fft_isb2_94_BIT_255_64_THEN_IF_fft_isb2_94__ETC___d959[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_isb2_94_BIT_255_64_THEN_IF_fft_isb2_94__ETC___d959 ;
  assign x__h241587 =
	     fft_isb2[255] ?
	       IF_fft_isb2_94_BIT_255_64_THEN_NEG_fft_isb2_94_ETC___d945 :
	       -IF_fft_isb2_94_BIT_255_64_THEN_NEG_fft_isb2_94_ETC___d945 ;
  assign x__h241626 = fft_isb2[255] ? -fft_isb2[255:224] : fft_isb2[255:224] ;
  assign x__h244575 =
	     (!x__h244988[63] &&
	      IF_fft_isb2_94_BIT_223_03_THEN_NEG_IF_fft_isb2_ETC___d994[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_isb2_94_BIT_223_03_THEN_NEG_IF_fft_isb2_ETC___d994 ;
  assign x__h244988 =
	     fft_isb2[223] ?
	       -IF_fft_isb2_94_BIT_223_03_THEN_NEG_fft_isb2_94_ETC___d980 :
	       IF_fft_isb2_94_BIT_223_03_THEN_NEG_fft_isb2_94_ETC___d980 ;
  assign x__h247944 = fft_isb2[63:32] - x__h301192 ;
  assign x__h254187 = fft_isb2[31:0] - x__h254206 ;
  assign x__h254206 =
	     (!x__h257058[47] &&
	      (x__h257058[31] || x__h257058[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h257058[47] &&
		 (!x__h257058[31] || ~x__h257058[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h257058[31:0]) ;
  assign x__h25541 = fft_inputREG[287:256] - x__h25560 ;
  assign x__h25560 =
	     (!x__h28412[47] &&
	      (x__h28412[31] || x__h28412[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h28412[47] &&
		 (!x__h28412[31] || ~x__h28412[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h28412[31:0]) ;
  assign x__h257058 =
	     (!x__h257471[63] &&
	      IF_fft_isb2_94_BIT_95_060_THEN_NEG_0_CONCAT_IF_ETC___d1078[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_isb2_94_BIT_95_060_THEN_NEG_0_CONCAT_IF_ETC___d1078 ;
  assign x__h257471 =
	     fft_isb2[95] ?
	       -_0_CONCAT_IF_fft_isb2_94_BIT_95_060_THEN_NEG_ff_ETC___d1064 :
	       _0_CONCAT_IF_fft_isb2_94_BIT_95_060_THEN_NEG_ff_ETC___d1064 ;
  assign x__h260424 = fft_isb2[447:416] + x__h260558 ;
  assign x__h260558 =
	     IF_NOT_IF_NOT_IF_fft_isb2_94_BIT_511_96_THEN_I_ETC___d734 -
	     IF_NOT_IF_NOT_IF_fft_isb2_94_BIT_479_35_THEN_I_ETC___d773 ;
  assign x__h267417 = fft_isb2[415:384] + x__h213859 ;
  assign x__h274611 = fft_isb2[319:288] + x__h274745 ;
  assign x__h274745 =
	     32'd0 -
	     ((!x__h224223[47] &&
	       (x__h224223[31] || x__h224223[47:32] != 16'd0)) ?
		32'h7FFFFFFF :
		((x__h224223[47] &&
		  (!x__h224223[31] || ~x__h224223[47:32] != 16'd0)) ?
		   32'h80000000 :
		   x__h224223[31:0])) ;
  assign x__h280642 = fft_isb2[287:256] + x__h227310 ;
  assign x__h28412 =
	     (!x__h28825[63] &&
	      IF_fft_inputREG_BIT_351_27_THEN_NEG_0_CONCAT_I_ETC___d145[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_inputREG_BIT_351_27_THEN_NEG_0_CONCAT_I_ETC___d145 ;
  assign x__h286875 = fft_isb2[191:160] + x__h287009 ;
  assign x__h287009 =
	     ((!x__h287423[47] &&
	       (x__h287423[31] || x__h287423[47:32] != 16'd0)) ?
		32'h7FFFFFFF :
		((x__h287423[47] &&
		  (!x__h287423[31] || ~x__h287423[47:32] != 16'd0)) ?
		   32'h80000000 :
		   x__h287423[31:0])) -
	     ((!x__h237674[47] &&
	       (x__h237674[31] || x__h237674[47:32] != 16'd0)) ?
		32'h7FFFFFFF :
		((x__h237674[47] &&
		  (!x__h237674[31] || ~x__h237674[47:32] != 16'd0)) ?
		   32'h80000000 :
		   x__h237674[31:0])) ;
  assign x__h287423 =
	     (!x__h287836[63] &&
	      IF_fft_isb2_94_BIT_255_64_THEN_NEG_IF_fft_isb2_ETC___d882[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_isb2_94_BIT_255_64_THEN_NEG_IF_fft_isb2_ETC___d882 ;
  assign x__h287836 =
	     fft_isb2[255] ?
	       -IF_fft_isb2_94_BIT_255_64_THEN_NEG_fft_isb2_94_ETC___d868 :
	       IF_fft_isb2_94_BIT_255_64_THEN_NEG_fft_isb2_94_ETC___d868 ;
  assign x__h28825 =
	     fft_inputREG[351] ?
	       -_0_CONCAT_IF_fft_inputREG_BIT_351_27_THEN_NEG_f_ETC___d131 :
	       _0_CONCAT_IF_fft_inputREG_BIT_351_27_THEN_NEG_f_ETC___d131 ;
  assign x__h293866 = fft_isb2[159:128] + x__h240760 ;
  assign x__h301058 = fft_isb2[63:32] + x__h301192 ;
  assign x__h301192 =
	     (!x__h301606[47] &&
	      (x__h301606[31] || x__h301606[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h301606[47] &&
		 (!x__h301606[31] || ~x__h301606[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h301606[31:0]) ;
  assign x__h301606 =
	     (!x__h302019[63] &&
	      IF_fft_isb2_94_BIT_127_019_THEN_NEG_0_CONCAT_I_ETC___d1037[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_isb2_94_BIT_127_019_THEN_NEG_0_CONCAT_I_ETC___d1037 ;
  assign x__h302019 =
	     fft_isb2[127] ?
	       -_0_CONCAT_IF_fft_isb2_94_BIT_127_019_THEN_NEG_f_ETC___d1023 :
	       _0_CONCAT_IF_fft_isb2_94_BIT_127_019_THEN_NEG_f_ETC___d1023 ;
  assign x__h307088 = fft_isb2[31:0] + x__h254206 ;
  assign x__h31783 = fft_inputREG[191:160] - x__h81404 ;
  assign x__h38026 = fft_inputREG[159:128] - x__h38045 ;
  assign x__h38045 =
	     (!x__h40897[47] &&
	      (x__h40897[31] || x__h40897[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h40897[47] &&
		 (!x__h40897[31] || ~x__h40897[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h40897[31:0]) ;
  assign x__h40897 =
	     (!x__h41310[63] &&
	      IF_fft_inputREG_BIT_223_10_THEN_NEG_0_CONCAT_I_ETC___d228[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_inputREG_BIT_223_10_THEN_NEG_0_CONCAT_I_ETC___d228 ;
  assign x__h41310 =
	     fft_inputREG[223] ?
	       -_0_CONCAT_IF_fft_inputREG_BIT_223_10_THEN_NEG_f_ETC___d214 :
	       _0_CONCAT_IF_fft_inputREG_BIT_223_10_THEN_NEG_f_ETC___d214 ;
  assign x__h44268 = fft_inputREG[63:32] - x__h93665 ;
  assign x__h50511 = fft_inputREG[31:0] - x__h50530 ;
  assign x__h50530 =
	     (!x__h53382[47] &&
	      (x__h53382[31] || x__h53382[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h53382[47] &&
		 (!x__h53382[31] || ~x__h53382[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h53382[31:0]) ;
  assign x__h53382 =
	     (!x__h53795[63] &&
	      IF_fft_inputREG_BIT_95_93_THEN_NEG_0_CONCAT_IF_ETC___d311[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_inputREG_BIT_95_93_THEN_NEG_0_CONCAT_IF_ETC___d311 ;
  assign x__h53795 =
	     fft_inputREG[95] ?
	       -_0_CONCAT_IF_fft_inputREG_BIT_95_93_THEN_NEG_ff_ETC___d297 :
	       _0_CONCAT_IF_fft_inputREG_BIT_95_93_THEN_NEG_ff_ETC___d297 ;
  assign x__h56748 = fft_inputREG[447:416] + x__h56882 ;
  assign x__h56882 =
	     (!x__h57296[47] &&
	      (x__h57296[31] || x__h57296[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h57296[47] &&
		 (!x__h57296[31] || ~x__h57296[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h57296[31:0]) ;
  assign x__h57296 =
	     (!x__h57709[63] &&
	      IF_fft_inputREG_BIT_511_THEN_NEG_0_CONCAT_IF_f_ETC___d22[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_inputREG_BIT_511_THEN_NEG_0_CONCAT_IF_f_ETC___d22 ;
  assign x__h57709 =
	     fft_inputREG[511] ?
	       -_0_CONCAT_IF_fft_inputREG_BIT_511_THEN_NEG_fft__ETC___d8 :
	       _0_CONCAT_IF_fft_inputREG_BIT_511_THEN_NEG_fft__ETC___d8 ;
  assign x__h5878 = fft_inputREG[447:416] - x__h56882 ;
  assign x__h62778 = fft_inputREG[415:384] + x__h13075 ;
  assign x__h69009 = fft_inputREG[319:288] + x__h69143 ;
  assign x__h69143 =
	     (!x__h69557[47] &&
	      (x__h69557[31] || x__h69557[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h69557[47] &&
		 (!x__h69557[31] || ~x__h69557[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h69557[31:0]) ;
  assign x__h69557 =
	     (!x__h69970[63] &&
	      IF_fft_inputREG_BIT_383_6_THEN_NEG_0_CONCAT_IF_ETC___d104[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_inputREG_BIT_383_6_THEN_NEG_0_CONCAT_IF_ETC___d104 ;
  assign x__h69970 =
	     fft_inputREG[383] ?
	       -_0_CONCAT_IF_fft_inputREG_BIT_383_6_THEN_NEG_ff_ETC___d90 :
	       _0_CONCAT_IF_fft_inputREG_BIT_383_6_THEN_NEG_ff_ETC___d90 ;
  assign x__h75039 = fft_inputREG[287:256] + x__h25560 ;
  assign x__h81270 = fft_inputREG[191:160] + x__h81404 ;
  assign x__h81404 =
	     (!x__h81818[47] &&
	      (x__h81818[31] || x__h81818[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h81818[47] &&
		 (!x__h81818[31] || ~x__h81818[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h81818[31:0]) ;
  assign x__h81818 =
	     (!x__h82231[63] &&
	      IF_fft_inputREG_BIT_255_69_THEN_NEG_0_CONCAT_I_ETC___d187[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_inputREG_BIT_255_69_THEN_NEG_0_CONCAT_I_ETC___d187 ;
  assign x__h82231 =
	     fft_inputREG[255] ?
	       -_0_CONCAT_IF_fft_inputREG_BIT_255_69_THEN_NEG_f_ETC___d173 :
	       _0_CONCAT_IF_fft_inputREG_BIT_255_69_THEN_NEG_f_ETC___d173 ;
  assign x__h87300 = fft_inputREG[159:128] + x__h38045 ;
  assign x__h93531 = fft_inputREG[63:32] + x__h93665 ;
  assign x__h93665 =
	     (!x__h94079[47] &&
	      (x__h94079[31] || x__h94079[47:32] != 16'd0)) ?
	       32'h7FFFFFFF :
	       ((x__h94079[47] &&
		 (!x__h94079[31] || ~x__h94079[47:32] != 16'd0)) ?
		  32'h80000000 :
		  x__h94079[31:0]) ;
  assign x__h94079 =
	     (!x__h94492[63] &&
	      IF_fft_inputREG_BIT_127_52_THEN_NEG_0_CONCAT_I_ETC___d270[47]) ?
	       48'h7FFFFFFFFFFF :
	       IF_fft_inputREG_BIT_127_52_THEN_NEG_0_CONCAT_I_ETC___d270 ;
  assign x__h94492 =
	     fft_inputREG[127] ?
	       -_0_CONCAT_IF_fft_inputREG_BIT_127_52_THEN_NEG_f_ETC___d256 :
	       _0_CONCAT_IF_fft_inputREG_BIT_127_52_THEN_NEG_f_ETC___d256 ;
  assign x__h99561 = fft_inputREG[31:0] + x__h50530 ;
  assign y_f__h111478 =
	     (x__h110304[15] &&
	      (x__h110304[63] || x__h110304[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h114912 =
	     (x__h113805[15] &&
	      (x__h113805[63] || x__h113805[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h123968 =
	     (x__h122794[15] &&
	      (x__h122794[63] || x__h122794[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h127402 =
	     (x__h126295[15] &&
	      (x__h126295[63] || x__h126295[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h142325 =
	     (x__h141220[15] &&
	      (x__h141220[63] || x__h141220[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h154810 =
	     (x__h153705[15] &&
	      (x__h153705[63] || x__h153705[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h17445 =
	     (x__h16340[15] && (x__h16340[63] || x__h16340[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h183296 =
	     (x__h182147[15] &&
	      (x__h182147[63] || x__h182147[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h195557 =
	     (x__h194408[15] &&
	      (x__h194408[63] || x__h194408[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h212359 =
	     (x__h211186[15] &&
	      (x__h211186[63] || x__h211186[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h215792 =
	     (x__h214686[15] &&
	      (x__h214686[63] || x__h214686[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h225810 =
	     (x__h224636[15] &&
	      (x__h224636[63] || x__h224636[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h229244 =
	     (x__h228137[15] &&
	      (x__h228137[63] || x__h228137[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h239260 =
	     (x__h238087[15] &&
	      (x__h238087[63] || x__h238087[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h242693 =
	     (x__h241587[15] &&
	      (x__h241587[63] || x__h241587[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h246092 =
	     (x__h244988[15] &&
	      (x__h244988[63] || x__h244988[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h258576 =
	     (x__h257471[15] &&
	      (x__h257471[63] || x__h257471[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h288984 =
	     (x__h287836[15] &&
	      (x__h287836[63] || x__h287836[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h29930 =
	     (x__h28825[15] && (x__h28825[63] || x__h28825[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h303168 =
	     (x__h302019[15] &&
	      (x__h302019[63] || x__h302019[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h42415 =
	     (x__h41310[15] && (x__h41310[63] || x__h41310[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h54900 =
	     (x__h53795[15] && (x__h53795[63] || x__h53795[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h58858 =
	     (x__h57709[15] && (x__h57709[63] || x__h57709[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h71119 =
	     (x__h69970[15] && (x__h69970[63] || x__h69970[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h83380 =
	     (x__h82231[15] && (x__h82231[63] || x__h82231[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;
  assign y_f__h95641 =
	     (x__h94492[15] && (x__h94492[63] || x__h94492[14:0] != 15'd0)) ?
	       16'd1 :
	       16'd0 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        fft_inputREG <= `BSV_ASSIGNMENT_DELAY 512'd0;
	fft_isb1 <= `BSV_ASSIGNMENT_DELAY 512'd0;
	fft_isb2 <= `BSV_ASSIGNMENT_DELAY 512'd0;
	fft_outputREG <= `BSV_ASSIGNMENT_DELAY 512'd0;
      end
    else
      begin
        if (fft_inputREG_EN)
	  fft_inputREG <= `BSV_ASSIGNMENT_DELAY fft_inputREG_D_IN;
	if (fft_isb1_EN) fft_isb1 <= `BSV_ASSIGNMENT_DELAY fft_isb1_D_IN;
	if (fft_isb2_EN) fft_isb2 <= `BSV_ASSIGNMENT_DELAY fft_isb2_D_IN;
	if (fft_outputREG_EN)
	  fft_outputREG <= `BSV_ASSIGNMENT_DELAY fft_outputREG_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    fft_inputREG =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    fft_isb1 =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    fft_isb2 =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    fft_outputREG =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkFFT

